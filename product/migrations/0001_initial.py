# Generated by Django 4.0.3 on 2022-03-15 04:56

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('rasm', models.ImageField(blank=True, null=True, upload_to='media/category')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='product.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['pk', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mgpiksel', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('quantity', models.IntegerField(blank=True, default=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('market_price', models.FloatField(default=12, max_length=200)),
                ('discount_price', models.FloatField(blank=True, default=None, max_length=200, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='banners/thumbnails/')),
                ('colors', models.TextField(blank=True, default='[]', null=True)),
                ('available', models.BooleanField(default=True)),
                ('texttitle', ckeditor.fields.RichTextField()),
                ('text', ckeditor.fields.RichTextField()),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.brand')),
                ('categories', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='product.category')),
                ('categorystatus', models.ManyToManyField(to='product.categorystatus')),
            ],
            options={
                'ordering': ['-pk', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='products')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='deal')),
            ],
        ),
        migrations.CreateModel(
            name='BannerAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.CharField(editable=False, max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('show_prices', models.BooleanField(default=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to='banners')),
                ('thumbnail', models.ImageField(null=True, upload_to='banners/thumbnails/')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('product', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='banner_ad', to='product.product')),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
    ]
